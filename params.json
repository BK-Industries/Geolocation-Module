{"name":"Play Geolocation Module","tagline":"This is a play module for IP based geolocation","body":"# Play Geolocation Plugin\r\n\r\n[![Build Status](https://travis-ci.org/edulify/play-geolocation-module.edulify.com.svg)](https://travis-ci.org/edulify/play-geolocation-module.edulify.com)\r\n\r\nThis is a play module for IP based geolocation. Currently, the module supports use of one of the following service to retrieve the IP data:\r\n\r\n#### [Freegeoip](http://freegeoip.net/)\r\n\r\n> freegeoip.net provides a public HTTP API for software developers to search the geolocation of IP addresses. It uses a database of IP addresses that are associated to cities along with other relevant information like time zone, latitude and longitude.\r\n\r\n#### [Maxmind GeoIP2 Country](https://www.maxmind.com/en/country)\r\n\r\n> Determine an Internet visitor's country based on their IP address.\r\n\r\nHowever, support to other geolocation services is possible using the API provided by this plugin.\r\n\r\n## How to use\r\n\r\nThe first step is include the the dependency in your `build.sbt` or `project/Build.scala` file:\r\n\r\n#### `build.sbt`\r\n\r\n```scala\r\nname := \"sitemapper-java-sample\"\r\n\r\nversion := \"1.0-SNAPSHOT\"\r\n\r\nlazy val root = (project in file(\".\")).enablePlugins(PlayJava)\r\n\r\nscalaVersion := \"2.11.5\"\r\n\r\nlibraryDependencies ++= Seq(\r\n  // Add your project dependencies here,\r\n  javaCore,\r\n  javaJdbc,\r\n  javaEbean,\r\n  \"com.edulify\" %% \"geolocation\" % \"1.4.0\"\r\n)\r\n\r\nresolvers ++= Seq(\r\n  Resolver.url(\"Edulify Repository\", url(\"https://edulify.github.io/modules/releases/\"))(Resolver.ivyStylePatterns)\r\n)\r\n```\r\n\r\n#### `project/Build.scala`\r\n\r\n```scala\r\nimport sbt._\r\nimport Keys._\r\nimport play.Project._\r\n\r\nobject ApplicationBuild extends Build {\r\n\r\n  val appName         = \"geolocation-java-sample\"\r\n  val appVersion      = \"1.0-SNAPSHOT\"\r\n\r\n  val appDependencies = Seq(\r\n    // Add your project dependencies here,\r\n    javaCore,\r\n    javaJdbc,\r\n    javaEbean,\r\n    \"com.edulify\" %% \"geolocation\" % \"1.4.0\"\r\n  )\r\n\r\n  val main = play.Project(appName, appVersion, appDependencies).settings(\r\n    // Add your own project settings here\r\n    resolvers += Resolver.url(\"Edulify Repository\", url(\"https://edulify.github.io/modules/releases/\"))(Resolver.ivyStylePatterns)\r\n  )\r\n\r\n}\r\n\r\n```\r\n\r\n#### Add plugin class to your `project/play.plugins`:\r\n\r\nAdd the following line in your `play.plugins` file:\r\n\r\n    1600:com.edulify.modules.geolocation.GeolocationPlugin\r\n\r\nUse a number greater than `1000` since [play reserves this number to its own plugins](https://playframework.com/documentation/2.3.x/ScalaPlugins).\r\n\r\n## Configurations\r\n\r\nThis plugins offers the following configurations:\r\n\r\n| Configuration           | Description                             | Default           |\r\n|:------------------------|:----------------------------------------|:------------------|\r\n| `geolocation.provider`  | The geolocation provider implementation | `com.edulify.modules.geolocation.providers.FreegeoipProvider` |\r\n| `geolocation.cache.on`  | Caches geolocation results calls        | `false`           |\r\n| `geolocation.cache.ttl` | How long it should cache the results    | none              |\r\n| `geolocation.enabled`   | If the plugin is enabled or not         | `true`            |\r\n| `geolocation.timeout`   | How long it should waits to retrieve the geolocation | `5s` |\r\n| `geolocation.maxmind.license` | Maxmind license                   | none              |\r\n\r\n\r\nPer instance, you can add the following in your `conf/application.conf`:\r\n\r\n```\r\ngeolocation {\r\n  provider = \"com.edulify.modules.geolocation.providers.MaxmindProvider\"\r\n  timeout = 1s\r\n  cache {\r\n    on = true\r\n    ttl = 10s\r\n  }\r\n  maxmind.license = \"your-maxmind-license\"\r\n}\r\n```\r\n\r\nAlso, notice that the cache uses the cache support offered by Playframework.\r\n\r\n\r\n## Code example\r\n\r\nRight now there is support to both async and sync geolocation calls, both using [the Play WS API](https://playframework.com/documentation/2.3.x/JavaWS). \r\n\r\n### Async Example Code\r\n\r\nThis is the expected way to use the plugin.\r\n\r\n```java\r\nimport com.edulify.modules.geolocation.Geolocation;\r\nimport com.edulify.modules.geolocation.AsyncGeolocationService;\r\n\r\npublic class Application {\r\n  public static Result index() {\r\n    ...\r\n    Promise<Geolocation> promise = AsyncGeolocationService.getGeolocation(request.remoteAddress());\r\n    return promise.map(new Function<Geolocation, Result>() {\r\n      ...\r\n    });\r\n  }\r\n}\r\n```\r\n\r\n### Sync Example code (DEPRECATED):\r\n\r\nThis will be removed in a future release and it is exists just to keep compatibility.\r\n\r\n```java\r\nimport com.edulify.modules.geolocation.Geolocation;\r\nimport com.edulify.modules.geolocation.GeolocationService;\r\n\r\npublic class Application {\r\n  public static Result index() {\r\n    ...\r\n    Geolocation geolocation = GeolocationService.getGeolocation(request.remoteAddress());\r\n    return ok(viewGeolocation.render(geolocation));\r\n  }\r\n}\r\n```\r\n\r\n## Implement your own geolocation service provider\r\n\r\nOut of the box, this plugins supports just Maxmind and Freegeoip, but you can add your own geolocation service provider implementation and everything will works as expected. To do that, just create an implementation of `com.edulify.modules.geolocation.GeolocationProvider` and then configure it:\r\n\r\n```java\r\npackage com.acme.geolocation;\r\n\r\nimport com.edulify.modules.geolocation.Geolocation;\r\nimport com.edulify.modules.geolocation.GeolocationProvider;\r\nimport play.libs.F;\r\nimport play.libs.ws.WS;\r\nimport play.libs.ws.WSResponse;\r\n\r\npublic class MyGeolocationProvider implements GeolocationProvider {\r\n\r\n    @Override\r\n    public F.Promise<Geolocation> get(String ip) {\r\n        // Do a request to your geolocation service and \r\n        // then return a Promise with a geolocation object\r\n    }\r\n}\r\n```\r\n\r\nAfter that, you just have to configure the provider:\r\n\r\n```\r\ngeolocation {\r\n  provider = \"com.acme.geolocation.MyGeolocationProvider\"\r\n  timeout = 1s\r\n  cache {\r\n    on = true\r\n    ttl = 10s\r\n  }\r\n}\r\n```\r\n\r\nThings like cache and timeouts will work seamless.\r\n\r\n## More plugins from [Edulify.com](https://edulify.com)\r\n\r\n1. [Sitemap Plugin](https://github.com/edulify/play-sitemap-module.edulify.com)\r\n2. [HikariCP Plugin](https://github.com/edulify/play-hikaricp.edulify.com)\r\n3. [Currency Plugin](https://github.com/edulify/play-currency-converter-module.edulify.com)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}